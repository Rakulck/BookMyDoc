{"version":3,"file":"static/js/30.88928d18.chunk.js","mappings":"+PAGA,MA6EA,EA7E0BA,IAAyC,IAAxC,KAAEC,EAAI,WAAEC,EAAU,aAAEC,GAAcH,EAC3D,MAAOI,EAAkBC,IAAuBC,EAAAA,EAAAA,WACpC,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYK,WAAY,IAgC1B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,cAG1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5BN,EAAiBS,KAAKC,IACrB,MAAMC,EAAUd,EAAKe,MAAMC,GAASA,EAAKC,aAAeJ,IACxD,OACEN,EAAAA,EAAAA,MAAA,QAAuBC,UAAU,MAAKC,SAAA,CACnCK,EAAQI,MACTR,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLX,UAAU,aACVY,QAASA,IA5BMP,KAC3B,MAAMQ,EAAkBlB,EAAiBmB,QACtCR,GAAYA,IAAYD,IAE3BT,EAAoBiB,GAGpB,MAAME,EAAqBF,EAAgBT,KACxCC,IAAS,IAAAW,EAAA,OACgD,QADhDA,EACRxB,EAAKe,MAAMD,GAAYA,EAAQG,aAAeJ,WAAU,IAAAW,OAAA,EAAxDA,EAA0DP,UAAU,IAExEf,EAAa,CAAEuB,OAAQ,CAAEP,KAAM,WAAYQ,MAAOH,IAAuB,EAiB9CI,CAAoBd,GAAWJ,SAC/C,WANQK,EAAQc,GASZ,OAMbrB,EAAAA,EAAAA,MAAA,UACEqB,GAAG,WACHpB,UAAU,eACVqB,SAxDsBC,IAC1B,MAAMC,EAAiBD,EAAML,OAAOC,MACpC,IAAKvB,EAAiB6B,SAASD,GAAiB,CAC9C,MAAMV,EAAkB,IAAIlB,EAAkB4B,GAC9C3B,EAAoBiB,GAGpB,MAAME,EAAqBF,EAAgBT,KACxCC,IAAS,IAAAoB,EAAA,OACgD,QADhDA,EACRjC,EAAKe,MAAMD,GAAYA,EAAQG,aAAeJ,WAAU,IAAAoB,OAAA,EAAxDA,EAA0DhB,UAAU,IAExEf,EAAa,CAAEuB,OAAQ,CAAEP,KAAM,WAAYQ,MAAOH,IACpD,GA6CIG,MAAM,GAAEjB,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,GAAGQ,UAAQ,EAAAzB,SAAC,qBAGzBT,EAAKY,KAAKE,IACTJ,EAAAA,EAAAA,KAAA,UAAyBgB,MAAOZ,EAAQG,WAAWR,SAChDK,EAAQI,MADEJ,EAAQc,WAKrB,ECwXV,EAtbgBO,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAaC,IAAkB1C,EAAAA,EAAAA,UAAS,OACxC2C,EAAWC,IAAgB5C,EAAAA,EAAAA,WAAS,IACpC6C,EAAYC,IAAiB9C,EAAAA,EAAAA,UAAS,KACtCJ,EAAYmD,IAAiB/C,EAAAA,EAAAA,UAAS,CAC3CgD,aAAc,GACdC,MAAO,GACPC,cAAe,GACfC,WAAY,GACZC,IAAK,GACLC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRtD,SAAU,GACVuD,YAAa,GACbC,SAAU,CACRC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,QAAS,OAGNC,EAAiBC,IAAiB/D,EAAAA,EAAAA,UAAS,KAC5C,KAAEgE,EAAI,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,KAAaP,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOQ,QACvDzE,KAAM0E,EAAY,UAAEC,IAAcC,EAAAA,EAAAA,IAAuB,CAAC,IAElEC,EAAAA,EAAAA,YAAU,KACRjC,GAASkC,EAAAA,EAAAA,MAAmB,GAC3B,CAAClC,KAEJiC,EAAAA,EAAAA,YAAU,KAKyB,IAADE,EAAAC,EAAAC,EAAAC,IAJ3BX,GAAWD,IACda,EAAAA,EAAAA,IAAMb,EAAMc,UAGVf,GAASC,GAAUC,KACrBxB,EAAesB,GACfjB,EAAc,CACZC,aAAcgB,EAAKhB,aACnBC,MAAOe,EAAKf,MACZC,cAAec,EAAKd,cACpBC,WAAYa,EAAKb,WACjBC,IAAKY,EAAKZ,IACVC,SAAU,GACVC,MAAOU,EAAKV,MACZC,OAAQS,EAAKT,OACbtD,SAAUoE,EACVZ,SAAU,CACRC,QAAsB,QAAfgB,EAAEV,EAAKP,gBAAQ,IAAAiB,OAAA,EAAbA,EAAehB,QACxBC,KAAmB,QAAfgB,EAAEX,EAAKP,gBAAQ,IAAAkB,OAAA,EAAbA,EAAehB,KACrBC,MAAoB,QAAfgB,EAAEZ,EAAKP,gBAAQ,IAAAmB,OAAA,EAAbA,EAAehB,MACtBC,QAAsB,QAAfgB,EAAEb,EAAKP,gBAAQ,IAAAoB,OAAA,EAAbA,EAAehB,WAG5BE,EAAkB,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMX,WAGlBgB,GACFtB,GAAea,IAAK,IAAWA,EAAO3D,SAAUoE,KAClD,GACC,CAACL,EAAMC,EAAOC,EAASG,IAE1B,MAIMxE,EAAgBmF,IACpB,MAAM,KAAEnE,EAAI,MAAEQ,GAAU2D,EAAE5D,OAEb,kBAATP,EACFkC,EAAc,IACTnD,EACHsD,cAAe,IAAItD,EAAWsD,cAAe7B,KAEtC,CAAC,UAAW,QAAS,OAAQ,WAAWM,SAASd,GAC1DkC,EAAc,IACTnD,EACH6D,SAAU,IACL7D,EAAW6D,SACd,CAAC5C,GAAOQ,KAIZ0B,EADkB,aAATlC,EACK,IACTjB,EACH4D,YAAa,IAAInC,IAGL,IACTzB,EACH,CAACiB,GAAOQ,GAEZ,EA4EF,OAAI6C,GAAWI,GAEXjE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAW,CAACC,KAAM,IAAKC,MAAO,UAAWjB,QAASA,OAMvD7D,EAAAA,EAAAA,KAAA,OAAKkB,GAAG,UAASnB,UACfF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAc,KACf/E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OACEgF,IAAKvB,GAAmB,mBACxBwB,IAAI,mBACJnF,UAAU,sCACVoF,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,UAAW,YAEvDrF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SACnCuC,GACCzC,EAAAA,EAAAA,MAAA,QACEyF,SAzFOC,UAAc,IAADC,EAAAC,EACpCd,EAAEe,iBACF,MAAMC,EAAW,IAAIC,SAErBD,EAASE,OAAO,eAAgBC,OAAOvG,EAAWoD,eAClDgD,EAASE,OAAO,QAASC,OAAOvG,EAAWqD,QAC3C+C,EAASE,OAAO,QAASC,OAAOvG,EAAW0D,QAC3C0C,EAASE,OAAO,SAAUC,OAAOvG,EAAW2D,SAC5CyC,EAASE,OAAO,MAAOC,OAAOvG,EAAWwD,MACzC4C,EAASE,OAAO,aAAcE,OAAOxG,EAAWuD,aAE5CvD,EAAW6D,UACbuC,EAASE,OAAO,WAAYG,KAAKC,UAAU1G,EAAW6D,WAG9C,OAAV7D,QAAU,IAAVA,GAAuB,QAAbiG,EAAVjG,EAAY4D,mBAAW,IAAAqC,GAAvBA,EAAyBU,SAAS5F,GAChCqF,EAASE,OAAO,aAAcvF,KAGtB,OAAVf,QAAU,IAAVA,GAAyB,QAAfkG,EAAVlG,EAAYsD,qBAAa,IAAA4C,GAAzBA,EAA2BS,SAAS5F,GAClCqF,EAASE,OAAO,kBAAmBvF,KAGjCf,EAAWyD,UACb2C,EAASE,OAAO,OAAQtG,EAAWyD,UAGrC,IACEd,GAASiE,EAAAA,EAAAA,IAAkBR,IAE3BpD,GAAa,EACf,CAAE,MAAOqB,GACPwC,QAAQxC,MAAM,2BAA4BA,GAChB,OAAjB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOyC,YACT5B,EAAAA,GAAMb,MAAMA,EAAMc,SAElBD,EAAAA,GAAMb,MAAM,iDAEhB,GAoDgB0C,QAAQ,sBACRxG,UAAU,eAAcC,SAAA,EAExBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,eAAcF,SAAC,eAC9BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,eACHV,KAAK,eACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAYoD,eAAgB,GACnCxB,SAAU3B,EACV+G,YAAY,mBAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,uBACvBC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,QACHV,KAAK,QACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAYqD,QAAS,GAC5BzB,SAAU3B,EACV+G,YAAY,oBAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACES,KAAK,MACLX,UAAU,eACVoB,GAAG,QACHV,KAAK,QACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAY0D,QAAS,GAC5B9B,SAAU3B,EACV+G,YAAY,2BAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,MAAKF,SAAC,SACrBC,EAAAA,EAAAA,KAAA,YACEF,UAAU,eACVoB,GAAG,MACHV,KAAK,MACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAYwD,MAAO,GAC1B5B,SAAU3B,EACV+G,YAAY,+BAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,SAAQF,SAAC,YACxBF,EAAAA,EAAAA,MAAA,UACEC,UAAU,eACVoB,GAAG,SACHV,KAAK,SACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAY2D,SAAU,GAC7B/B,SAAU3B,EAAaO,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,GAAEjB,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,OAAMjB,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,SAAQjB,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQgB,MAAM,QAAOjB,SAAC,iBAI1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,aAAYF,SAAC,gBAC5BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,aACHV,KAAK,aACLQ,OAAiB,OAAVzB,QAAU,IAAVA,OAAU,EAAVA,EAAYuD,aAAc,GACjC3B,SAAU3B,EACV+G,YAAY,yBAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,gBAAeF,SAAC,yBAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAClByG,MAAMC,QAAkB,OAAVlH,QAAU,IAAVA,OAAU,EAAVA,EAAYsD,gBACzBtD,EAAWsD,cAAc3C,KAAI,CAACwG,EAAKC,KACjC9G,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,MAAKC,SAAA,CAC7B2G,GACD1G,EAAAA,EAAAA,KAAA,QACEF,UAAU,aACVY,QAASA,KAAMkG,OAhI5BC,EAgIsCF,OA9HvDjE,EAAc,IACTnD,EACHsD,cAAetD,EAAWsD,cAAcjC,QACtC,CAACkG,EAAGH,IAAUA,IAAUE,MALXA,KAgI6C,EAAA9G,SACjC,QALO4G,QAWhB3G,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLO,MAAOwB,EACPrB,SAAWwD,GAAMlC,EAAckC,EAAE5D,OAAOC,OACxC+F,UAzJR3F,IAC0C,IAAD4F,EAArC,UAAd5F,EAAM6F,KAAyC,KAAtBzE,EAAW0E,SACtC9F,EAAMsE,iBAENhD,EAAc,IACTnD,EACHsD,cAAuC,QAAxBmE,EAAAzH,EAAWsD,qBAAa,IAAAmE,GAAxBA,EAA0BG,OACrC,IAAI5H,EAAWsD,cAAeL,EAAW0E,QACzC,CAAC1E,EAAW0E,UAElBzE,EAAc,IAChB,EA+IsB8D,YAAY,0BACZzG,UAAU,qBAKhBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAACoH,EAAc,CACb9H,KAAM0E,GAAgB,GACtBzE,WAAY,CAAEK,SAAU,IACxBJ,aAAcA,OAIlBK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,aAG1BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,mBACHV,KAAK,UACLQ,OAAiB,OAAVzB,QAAU,IAAVA,GAAoB,QAAVmC,EAAVnC,EAAY6D,gBAAQ,IAAA1B,OAAV,EAAVA,EAAsB2B,UAAW,GACxClC,SAAU3B,EACV+G,YAAY,mBAGdvG,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,UAC1BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,gBACHV,KAAK,OACLQ,OAAiB,OAAVzB,QAAU,IAAVA,GAAoB,QAAVoC,EAAVpC,EAAY6D,gBAAQ,IAAAzB,OAAV,EAAVA,EAAsB2B,OAAQ,GACrCnC,SAAU3B,EACV+G,YAAY,gBAGdvG,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,WAC1BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,iBACHV,KAAK,QACLQ,OAAiB,OAAVzB,QAAU,IAAVA,GAAoB,QAAVqC,EAAVrC,EAAY6D,gBAAQ,IAAAxB,OAAV,EAAVA,EAAsB2B,QAAS,GACtCpC,SAAU3B,EACV+G,YAAY,iBAGdvG,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,aAC1BC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,UACHV,KAAK,mBACLQ,OAAiB,OAAVzB,QAAU,IAAVA,GAAoB,QAAVsC,EAAVtC,EAAY6D,gBAAQ,IAAAvB,OAAV,EAAVA,EAAsB2B,UAAW,GACxCrC,SAAU3B,EACV+G,YAAY,sBAIhB1G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,OAAMF,SAAC,mBACtBC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLX,UAAU,eACVoB,GAAG,OACHV,KAAK,OACLW,SA/QIwD,IACxBjC,GAAe2E,IAAQ,IAClBA,EACHrE,SAAU2B,EAAE5D,OAAOuG,MAAM,MACxB,QA+QazH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLC,QAASA,IAAM6B,GAAa,GAC5BzC,UAAU,2BAA0BC,SACrC,YAGDC,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASX,UAAU,uBAAsBC,SAAC,gBAM3DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAa,OAAXqC,QAAW,IAAXA,OAAW,EAAXA,EAAaO,gBAC1C3C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAa,OAAXqC,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,SAC1C5C,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gDAA+CC,SAC9C,OAAXqC,QAAW,IAAXA,GAAAA,EAAaS,eACW,QADEf,EAC3BM,EAAYS,qBAAa,IAAAf,GAAzBA,EAA2BqF,OACA,QADMpF,EAC/BK,EAAYS,qBAAa,IAAAd,OAAA,EAAzBA,EAA2B7B,KAAI,CAACqH,EAAYZ,KAC1C3G,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SACrBwH,GAD2BZ,MAKhC3G,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAGPF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,gBAAmB,IACpC,OAAXqC,QAAW,IAAXA,OAAW,EAAXA,EAAaU,WAAW,cAG3B9C,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gDAA+CC,SAC9C,OAAXqC,QAAW,IAAXA,GAAAA,EAAaxC,UAAgC,QAAxBoC,EAAII,EAAYxC,gBAAQ,IAAAoC,GAApBA,EAAsBmF,OAC1B,QADgClF,EACpDG,EAAYxC,gBAAQ,IAAAqC,OAAA,EAApBA,EAAsB/B,KAAI,CAACE,EAASuG,KAClC3G,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SACrBK,EAAQI,MADmBmG,MAKhC3G,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAIPC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWC,SAAa,OAAXqC,QAAW,IAAXA,OAAW,EAAXA,EAAaW,OACvClD,EAAAA,EAAAA,MAAA,UACEa,QAvWI8G,KACtBjF,GAAa,EAAK,EAuWAzC,UAAU,8BAA6BC,SAAA,EAEvCC,EAAAA,EAAAA,KAACyH,EAAAA,IAAM,IAAG,2BAStB,C","sources":["components/profile/MultipleSelect.jsx","components/profile/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './multiple.css';\n\nconst ServicesTagSelect = ({ data, formFields, handleChange }) => {\n  const [selectedServices, setSelectedServices] = useState(\n    formFields?.services || [],\n  );\n\n  const handleSelectChange = (event) => {\n    const selectedOption = event.target.value;\n    if (!selectedServices.includes(selectedOption)) {\n      const updatedServices = [...selectedServices, selectedOption];\n      setSelectedServices(updatedServices);\n\n      // Return the updated array of service IDs\n      const selectedServiceIds = updatedServices.map(\n        (serviceId) =>\n          data.find((service) => service.service_id === serviceId)?.service_id,\n      );\n      handleChange({ target: { name: 'services', value: selectedServiceIds } });\n    }\n  };\n\n  const handleRemoveService = (serviceId) => {\n    const updatedServices = selectedServices.filter(\n      (service) => service !== serviceId,\n    );\n    setSelectedServices(updatedServices);\n\n    // Return the updated array of service IDs after removal\n    const selectedServiceIds = updatedServices.map(\n      (serviceId) =>\n        data.find((service) => service.service_id === serviceId)?.service_id,\n    );\n    handleChange({ target: { name: 'services', value: selectedServiceIds } });\n  };\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"services\">Services</label>\n\n      {/* Tags Display */}\n      <div className=\"tags-container\">\n        {selectedServices.map((serviceId) => {\n          const service = data.find((item) => item.service_id === serviceId);\n          return (\n            <span key={service.id} className=\"tag\">\n              {service.name}\n              <button\n                type=\"button\"\n                className=\"remove-tag\"\n                onClick={() => handleRemoveService(serviceId)}\n              >\n                &times;\n              </button>\n            </span>\n          );\n        })}\n      </div>\n\n      {/* Dropdown for Selecting Services */}\n      <select\n        id=\"services\"\n        className=\"form-control\"\n        onChange={handleSelectChange}\n        value=\"\"\n      >\n        <option value=\"\" disabled>\n          Select a service\n        </option>\n        {data.map((service) => (\n          <option key={service.id} value={service.service_id}>\n            {service.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ServicesTagSelect;\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { FaEdit } from 'react-icons/fa'; // Import Font Awesome edit icon\nimport './Profile.css';\nimport {\n  fetchUserProfile,\n  updateUserProfile,\n} from '../../store/slices/auth.slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ScaleLoader } from 'react-spinners';\nimport { useGetAllServicesQuery } from './../../store/slices';\nimport MultipleSelect from './MultipleSelect';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const [profileData, setProfileData] = useState(null); // State to store profile data\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [formFields, setFormFields] = useState({\n    display_name: '',\n    title: '',\n    expertiseList: [],\n    experience: '',\n    bio: '',\n    photoUrl: '',\n    phone: '',\n    gender: '',\n    services: [],\n    servicesIds: [],\n    location: {\n      address: '',\n      city: '',\n      state: '',\n      country: '',\n    },\n  });\n  const [photoPreviewUrl, setPreviewUrl] = useState('');\n  const { user, error, loading } = useSelector((state) => state?.auth);\n  const { data: servicesData, isLoading } = useGetAllServicesQuery({});\n\n  useEffect(() => {\n    dispatch(fetchUserProfile());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!loading && error) {\n      toast(error.message);\n    }\n\n    if (user && !error && !loading) {\n      setProfileData(user);\n      setFormFields({\n        display_name: user.display_name,\n        title: user.title,\n        expertiseList: user.expertiseList,\n        experience: user.experience,\n        bio: user.bio,\n        photoUrl: '',\n        phone: user.phone,\n        gender: user.gender,\n        services: servicesData,\n        location: {\n          address: user.location?.address,\n          city: user.location?.city,\n          state: user.location?.state,\n          country: user.location?.country,\n        },\n      });\n      setPreviewUrl(user?.photoUrl);\n    }\n\n    if (servicesData) {\n      setFormFields((state) => ({ ...state, services: servicesData }));\n    }\n  }, [user, error, loading, servicesData]);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'expertiseList') {\n      setFormFields({\n        ...formFields,\n        expertiseList: [...formFields.expertiseList, value],\n      });\n    } else if (['address', 'state', 'city', 'country'].includes(name)) {\n      setFormFields({\n        ...formFields,\n        location: {\n          ...formFields.location,\n          [name]: value,\n        },\n      });\n    } else if (name === 'services') {\n      setFormFields({\n        ...formFields,\n        servicesIds: [...value],\n      });\n    } else {\n      setFormFields({\n        ...formFields,\n        [name]: value,\n      });\n    }\n  };\n\n  // TO HANDLE FILES ON CHANGE..\n  const handleFileChange = (e) => {\n    setFormFields((prevData) => ({\n      ...prevData,\n      photoUrl: e.target.files[0],\n    }));\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('display_name', String(formFields.display_name));\n    formData.append('title', String(formFields.title));\n    formData.append('phone', String(formFields.phone));\n    formData.append('gender', String(formFields.gender));\n    formData.append('bio', String(formFields.bio));\n    formData.append('experience', Number(formFields.experience));\n\n    if (formFields.location) {\n      formData.append('location', JSON.stringify(formFields.location));\n    }\n\n    formFields?.servicesIds?.forEach((item) =>\n      formData.append('services[]', item),\n    );\n\n    formFields?.expertiseList?.forEach((item) =>\n      formData.append('expertiseList[]', item),\n    );\n\n    if (formFields.photoUrl) {\n      formData.append('file', formFields.photoUrl);\n    }\n\n    try {\n      dispatch(updateUserProfile(formData));\n\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Updating profile failed:', error);\n      if (error?.statusCode === 400) {\n        toast.error(error.message);\n      } else {\n        toast.error('An error occurred while updating your profile.');\n      }\n    }\n  };\n\n  const addTag = (event) => {\n    if (event.key === 'Enter' && inputValue.trim() !== '') {\n      event.preventDefault();\n      // setTags([...tags, inputValue.trim()]);\n      setFormFields({\n        ...formFields,\n        expertiseList: formFields.expertiseList?.length\n          ? [...formFields.expertiseList, inputValue.trim()]\n          : [inputValue.trim()],\n      });\n      setInputValue('');\n    }\n  };\n\n  const removeTag = (indexToRemove) => {\n    // setTags(tags.filter((_, index) => index !== indexToRemove));\n    setFormFields({\n      ...formFields,\n      expertiseList: formFields.expertiseList.filter(\n        (_, index) => index !== indexToRemove,\n      ),\n    });\n  };\n\n  if (loading || isLoading) {\n    return (\n      <div className=\"flex text-center justify-center\">\n        <ScaleLoader size={150} color={'#18A0FB'} loading={loading} />\n      </div>\n    );\n  }\n\n  return (\n    <div id=\"profile\">\n      <div className=\"container\">\n        <ToastContainer />\n        <div className=\"row justify-content-center mt-4 center\">\n          <div className=\"col-md-7\">\n            <div className=\"card shadow-sm\">\n              <img\n                src={photoPreviewUrl || '/placeholder.png'}\n                alt=\"Doctor's profile\"\n                className=\"rounded-circle mx-auto d-block mt-3\"\n                style={{ width: '150px', height: '150px', objectFit: 'cover' }}\n              />\n              <div className=\"card-body text-center\">\n                {isEditing ? (\n                  <form\n                    onSubmit={handleFormSubmit}\n                    encType=\"multipart/form-data\"\n                    className=\"profile-form\"\n                  >\n                    <div className=\"form-group\">\n                      <label htmlFor=\"display_name\">Full Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"display_name\"\n                        name=\"display_name\"\n                        value={formFields?.display_name || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter name\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"title\">Designation/Title</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={formFields?.title || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter title\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"phone\">Phone</label>\n                      <input\n                        type=\"tel\"\n                        className=\"form-control\"\n                        id=\"phone\"\n                        name=\"phone\"\n                        value={formFields?.phone || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter phone number\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"bio\">Bio</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"bio\"\n                        name=\"bio\"\n                        value={formFields?.bio || ''}\n                        onChange={handleChange}\n                        placeholder=\"Tell us about yourself\"\n                      ></textarea>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"gender\">Gender</label>\n                      <select\n                        className=\"form-control\"\n                        id=\"gender\"\n                        name=\"gender\"\n                        value={formFields?.gender || ''}\n                        onChange={handleChange}\n                      >\n                        <option value=\"\">Select gender</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"experience\">Experience</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"experience\"\n                        name=\"experience\"\n                        value={formFields?.experience || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter experience\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"expertiseList\">Specialty/Expertise</label>\n                      <div className=\"tags-input-wrapper\">\n                        <div className=\"tags\">\n                          {Array.isArray(formFields?.expertiseList) &&\n                            formFields.expertiseList.map((tag, index) => (\n                              <div key={index} className=\"tag\">\n                                {tag}\n                                <span\n                                  className=\"remove-tag\"\n                                  onClick={() => removeTag(index)}\n                                >\n                                  x\n                                </span>\n                              </div>\n                            ))}\n                        </div>\n                        <input\n                          type=\"text\"\n                          value={inputValue}\n                          onChange={(e) => setInputValue(e.target.value)}\n                          onKeyDown={addTag}\n                          placeholder=\"Press enter to add tags\"\n                          className=\"tagsInput\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <MultipleSelect\n                        data={servicesData || []}\n                        formFields={{ services: [] }}\n                        handleChange={handleChange}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"location\">Address</label>\n                      {/* Render Address fields if AddressDto is available */}\n                      {/* Assuming AddressDto has fields like street, city, state, country */}\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"location_address\"\n                        name=\"address\"\n                        value={formFields?.location?.address || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter Address\"\n                      />\n\n                      <label htmlFor=\"location\">City</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"location_city\"\n                        name=\"city\"\n                        value={formFields?.location?.city || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter city\"\n                      />\n\n                      <label htmlFor=\"location\">State</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"location_state\"\n                        name=\"state\"\n                        value={formFields?.location?.state || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter state\"\n                      />\n\n                      <label htmlFor=\"location\">Country</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"country\"\n                        name=\"location_country\"\n                        value={formFields?.location?.country || ''}\n                        onChange={handleChange}\n                        placeholder=\"Enter country\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"file\">Profile Image</label>\n                      <input\n                        type=\"file\"\n                        className=\"form-control\"\n                        id=\"file\"\n                        name=\"file\"\n                        onChange={handleFileChange}\n                      />\n                    </div>\n\n                    <div className=\"form-group divided\">\n                      <button\n                        type=\"button\"\n                        onClick={() => setIsEditing(false)}\n                        className=\"btn btn-secondary cancel\"\n                      >\n                        Cancel\n                      </button>\n                      <button type=\"submit\" className=\"btn btn-primary save\">\n                        Save\n                      </button>\n                    </div>\n                  </form>\n                ) : (\n                  <div className=\"card-body text-center\">\n                    <h3 className=\"card-title \">{profileData?.display_name}</h3>\n                    <h5 className=\"card-title \">{profileData?.title}</h5>\n                    <h4>Expertise </h4>\n                    <p className=\"card-subtitle mb-2 text-muted  head-experties\">\n                      {profileData?.expertiseList &&\n                      profileData.expertiseList?.length ? (\n                        profileData.expertiseList?.map((speciality, index) => (\n                          <p className=\"experties\" key={index}>\n                            {speciality}\n                          </p>\n                        ))\n                      ) : (\n                        <p>No Expertise</p>\n                      )}\n                    </p>\n                    <p className=\"card-text\">\n                      <span className=\"text-muted\">Experience:</span>{' '}\n                      {profileData?.experience}+ years\n                    </p>\n\n                    <h4>Services </h4>\n                    <p className=\"card-subtitle mb-2 text-muted  head-experties\">\n                      {profileData?.services && profileData.services?.length ? (\n                        profileData.services?.map((service, index) => (\n                          <p className=\"experties\" key={index}>\n                            {service.name}\n                          </p>\n                        ))\n                      ) : (\n                        <p>No Expertise</p>\n                      )}\n                    </p>\n\n                    <p className=\"card-text\">{profileData?.bio}</p>\n                    <button\n                      onClick={handleEditClick}\n                      className=\"btn btn-link text-secondary\"\n                    >\n                      <FaEdit /> Edit\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["_ref","data","formFields","handleChange","selectedServices","setSelectedServices","useState","services","_jsxs","className","children","_jsx","htmlFor","map","serviceId","service","find","item","service_id","name","type","onClick","updatedServices","filter","selectedServiceIds","_data$find2","target","value","handleRemoveService","id","onChange","event","selectedOption","includes","_data$find","disabled","Profile","_formFields$location","_formFields$location2","_formFields$location3","_formFields$location4","_profileData$expertis","_profileData$expertis2","_profileData$services","_profileData$services2","dispatch","useDispatch","profileData","setProfileData","isEditing","setIsEditing","inputValue","setInputValue","setFormFields","display_name","title","expertiseList","experience","bio","photoUrl","phone","gender","servicesIds","location","address","city","state","country","photoPreviewUrl","setPreviewUrl","user","error","loading","useSelector","auth","servicesData","isLoading","useGetAllServicesQuery","useEffect","fetchUserProfile","_user$location","_user$location2","_user$location3","_user$location4","toast","message","e","ScaleLoader","size","color","ToastContainer","src","alt","style","width","height","objectFit","onSubmit","async","_formFields$servicesI","_formFields$expertise","preventDefault","formData","FormData","append","String","Number","JSON","stringify","forEach","updateUserProfile","console","statusCode","encType","placeholder","Array","isArray","tag","index","removeTag","indexToRemove","_","onKeyDown","_formFields$expertise2","key","trim","length","MultipleSelect","prevData","files","speciality","handleEditClick","FaEdit"],"sourceRoot":""}