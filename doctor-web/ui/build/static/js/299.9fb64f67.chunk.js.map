{"version":3,"file":"static/js/299.9fb64f67.chunk.js","mappings":"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","sources":["components/common/ConfirmModal.js","components/bookings/Reschedule.js","components/bookings/BookingCard.js","components/bookings/Bookings.js","lib/utils.js","components/common/Loading.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Loading from './../common/Loading';\r\n\r\nfunction ConfirmModal({\r\n  open,\r\n  type,\r\n  title,\r\n  body,\r\n  loading = false,\r\n  disable = false,\r\n  confirmButton,\r\n  onConfirm,\r\n  closeButton,\r\n  onClose,\r\n  children,\r\n}) {\r\n  const [show, setShow] = useState(open);\r\n\r\n  const handleClose = () => {\r\n    onClose && onClose(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    setShow(false);\r\n    onConfirm && onConfirm(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(open);\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{body || children}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            {closeButton ?? 'Close'}\r\n          </Button>\r\n          <Button\r\n            variant={type || 'primary'}\r\n            disabled={disable}\r\n            onClick={handleConfirm}\r\n          >\r\n            <Loading loading={loading}>{confirmButton}</Loading>\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useGetAvailabilitySlotsQuery,\r\n  useUpdateBookingMutation,\r\n} from './../../store/slices';\r\nimport { formatTime } from './../../lib/utils';\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Badge,\r\n  Stack,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport Loading from './../common/Loading';\r\n\r\nconst TimeSlot = ({ slot }) => {\r\n  return (\r\n    <Stack direction=\"horizontal\" gap={2}>\r\n      <Badge bg=\"secondary\">{formatTime(slot?.start_time)}</Badge>\r\n      <span> - </span>\r\n      <Badge bg=\"secondary\">{formatTime(slot?.end_time)}</Badge>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst Reschedule = ({ booking }) => {\r\n  const [show, setShow] = useState(true);\r\n  const [validation, setValidation] = useState({ valid: true });\r\n  const [formData, setFormData] = useState({\r\n    booking_id: booking?.booking_id,\r\n    date: booking?.date,\r\n    slot_id: booking?.slot?.slot_id,\r\n  });\r\n\r\n  const { data, isLoading, isFetching } = useGetAvailabilitySlotsQuery({\r\n    date: formData?.date,\r\n  });\r\n  const [updateBooking, updateBookingResult] = useUpdateBookingMutation();\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(data) && data?.length) {\r\n      const slot = data.find(\r\n        (item) => item?.slot_id === booking?.slot?.slot_id,\r\n      );\r\n      setFormData({\r\n        ...formData,\r\n        slot_id: slot?.slot_id,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        slot_id: null,\r\n      });\r\n    }\r\n  }, [data, booking?.slot?.slot_id, formData]);\r\n\r\n  const handleChange = (field, event) => {\r\n    let data = { ...formData };\r\n    if (event?.target?.value) {\r\n      data = { ...formData, [field]: event.target.value };\r\n    } else if (field && event) {\r\n      data = { ...formData, ...{ [field]: event } };\r\n    } else {\r\n      data = { ...formData, ...field };\r\n    }\r\n    setFormData(data);\r\n    handleValidation(data);\r\n  };\r\n\r\n  const handleValidation = ({ ...payload }) => {\r\n    let valid = true;\r\n    setValidation({\r\n      valid,\r\n    });\r\n\r\n    if (!payload?.date) {\r\n      valid = false;\r\n      setValidation({\r\n        ...validation,\r\n        valid,\r\n        date: 'Please select booking date',\r\n      });\r\n    } else {\r\n      const toDate = new Date();\r\n      const isValidDate =\r\n        new Date(payload?.date) >=\r\n        new Date(\r\n          toDate.getUTCFullYear(),\r\n          toDate.getUTCMonth(),\r\n          toDate.getUTCDate(),\r\n          0,\r\n          0,\r\n          0,\r\n        );\r\n      if (!isValidDate) {\r\n        valid = false;\r\n        setValidation({\r\n          ...validation,\r\n          valid,\r\n          date: 'Please select valid date',\r\n        });\r\n      }\r\n    }\r\n    if (data?.length && !payload?.slot_id) {\r\n      valid = false;\r\n      setValidation({\r\n        ...validation,\r\n        valid,\r\n        slot: 'Please select booking slot',\r\n      });\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const valid = handleValidation(formData);\r\n    if (valid) {\r\n      const bookingId = formData.booking_id;\r\n      delete formData.booking_id;\r\n      await updateBooking({ id: bookingId, data: formData });\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Reschedule Booking</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={validation.valid}>\r\n            <Form.Control\r\n              type=\"date\"\r\n              value={formData?.date}\r\n              onChange={(event) => handleChange('date', event)}\r\n              isInvalid={!!validation?.date}\r\n            />\r\n            {validation?.date && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {validation.date}\r\n              </Form.Control.Feedback>\r\n            )}\r\n            {isLoading || isFetching ? (\r\n              <Loading loading={isLoading || isFetching} children=\" \" />\r\n            ) : (\r\n              <>\r\n                <Row className=\"mt-3\">\r\n                  <Col xs={12}>\r\n                    <Form.Label className=\"text-capitalize\">\r\n                      {data?.length ? (\r\n                        data?.[0].day\r\n                      ) : (\r\n                        <Alert key=\"warning\" variant=\"warning\">\r\n                          No availability slot found. Set slot from Availability\r\n                          option.\r\n                        </Alert>\r\n                      )}\r\n                    </Form.Label>\r\n                  </Col>\r\n                </Row>\r\n                {(data || []).map((slot) => (\r\n                  <Row>\r\n                    <Col xs={12}>\r\n                      <Form.Check\r\n                        disabled={false}\r\n                        checked={formData?.slot_id === slot?.slot_id}\r\n                        type=\"radio\"\r\n                        onChange={() => handleChange('slot_id', slot?.slot_id)}\r\n                        label={<TimeSlot slot={slot} />}\r\n                        id={slot?.slot_id}\r\n                        isInvalid={true}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n                {validation?.slot && (\r\n                  <span className=\"text-danger\" style={{ fontSize: '.87rem' }}>\r\n                    {validation.slot}\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={\r\n              isLoading ||\r\n              isFetching ||\r\n              updateBookingResult?.isLoading ||\r\n              !formData?.slot_id\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            <Loading loading={updateBookingResult?.isLoading}>\r\n              Reschedule\r\n            </Loading>\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reschedule;\r\n","import React, { useState } from 'react';\r\nimport { Card, Button, Row, Col, Badge } from 'react-bootstrap';\r\nimport './Bookings.css';\r\nimport { CURRENCY_SYMBOL } from './../../types/const';\r\nimport ConfirmModal from '../common/ConfirmModal';\r\nimport Loading from './../common/Loading';\r\nimport Reschedule from './Reschedule';\r\nimport { useUpdateBookingMutation } from './../../store/slices';\r\nimport { formatTime, isExpireDate } from './../../lib/utils';\r\n\r\nconst BookingCard = ({ booking }) => {\r\n  const [updateBooking, updateBookingResult] = useUpdateBookingMutation();\r\n  const [confirmModal, setConfirmModal] = useState({\r\n    title: '',\r\n    open: false,\r\n    action: '',\r\n  });\r\n\r\n  const handleBooking = (status) => {\r\n    const payload = {\r\n      id: booking?.booking_id,\r\n      data: {\r\n        status,\r\n      },\r\n    };\r\n    updateBooking(payload);\r\n    setConfirmModal((state) => ({ ...state, open: false }));\r\n  };\r\n\r\n  const RenderActions = () => {\r\n    let buttonAction = null;\r\n    switch (booking?.status) {\r\n      case 'pending':\r\n        if (isExpireDate(booking?.date)) {\r\n          buttonAction = (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"ms-2\"\r\n              size=\"sm\"\r\n              onClick={() =>\r\n                setConfirmModal({\r\n                  open: true,\r\n                  title: 'Reschedule Booking',\r\n                  children: 'Are you sure want to reschedule this booking?',\r\n                  confirmButton: 'Yes, Reschedule',\r\n                  onConfirm: () =>\r\n                    setConfirmModal({ open: false, action: 'reschedule' }),\r\n                })\r\n              }\r\n            >\r\n              <Loading\r\n                loading={\r\n                  updateBookingResult?.isLoading &&\r\n                  setConfirmModal?.action === 'reschedule'\r\n                }\r\n              >\r\n                Reschedule\r\n              </Loading>\r\n            </Button>\r\n          );\r\n        } else {\r\n          buttonAction = (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"ms-2\"\r\n              size=\"sm\"\r\n              onClick={() =>\r\n                setConfirmModal({\r\n                  open: true,\r\n                  title: 'Confirm Booking',\r\n                  body: 'Are you sure want to confirm this booking?',\r\n                  confirmButton: 'Yes, Confirm',\r\n                  onConfirm: () => handleBooking('confirmed'),\r\n                  action: 'confirmed',\r\n                })\r\n              }\r\n            >\r\n              <Loading\r\n                loading={\r\n                  updateBookingResult?.isLoading &&\r\n                  confirmModal?.action === 'confirmed'\r\n                }\r\n              >\r\n                Confirm\r\n              </Loading>\r\n            </Button>\r\n          );\r\n        }\r\n        break;\r\n      case 'confirmed':\r\n        const isDatePassed = isExpireDate(booking?.date);\r\n        buttonAction = (\r\n          <>\r\n            <Button\r\n              variant=\"primary\"\r\n              className={isDatePassed ? `ms-2 mb-2` : 'ms-2'}\r\n              size=\"sm\"\r\n              onClick={() =>\r\n                setConfirmModal({\r\n                  open: true,\r\n                  title: 'Reschedule Booking',\r\n                  confirmButton: 'Yes, Reschedule',\r\n                  children: 'Are you sure want to reschedule this booking?',\r\n                  onConfirm: () =>\r\n                    setConfirmModal({ open: false, action: 'reschedule' }),\r\n                })\r\n              }\r\n            >\r\n              <Loading\r\n                loading={\r\n                  updateBookingResult?.isLoading &&\r\n                  confirmModal?.action === 'reschedule'\r\n                }\r\n              >\r\n                Reschedule\r\n              </Loading>\r\n            </Button>\r\n            {isDatePassed && (\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"ms-2 mb-2\"\r\n                size=\"sm\"\r\n                onClick={() =>\r\n                  setConfirmModal({\r\n                    open: true,\r\n                    title: 'Completed Booking',\r\n                    confirmButton: 'Yes, Completed',\r\n                    children: 'Are you sure want to completed this booking?',\r\n                    onConfirm: () => handleBooking('completed'),\r\n                    action: 'completed',\r\n                  })\r\n                }\r\n              >\r\n                <Loading\r\n                  loading={\r\n                    updateBookingResult?.isLoading &&\r\n                    confirmModal?.action === 'completed'\r\n                  }\r\n                >\r\n                  Completed\r\n                </Loading>\r\n              </Button>\r\n            )}\r\n          </>\r\n        );\r\n        break;\r\n      case 'canceled':\r\n        buttonAction = (\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"ms-2\"\r\n            size=\"sm\"\r\n            onClick={() =>\r\n              setConfirmModal({\r\n                open: true,\r\n                title: 'Resume Booking',\r\n                body: 'Are you sure want to resume this booking?',\r\n                confirmButton: 'Yes, Resume',\r\n                onConfirm: () => handleBooking('pending'),\r\n                action: 'pending',\r\n              })\r\n            }\r\n          >\r\n            <Loading\r\n              loading={\r\n                updateBookingResult?.isLoading &&\r\n                confirmModal?.action === 'pending'\r\n              }\r\n            >\r\n              Resume\r\n            </Loading>\r\n          </Button>\r\n        );\r\n        break;\r\n      default:\r\n        buttonAction = null;\r\n    }\r\n    if (buttonAction) {\r\n      return buttonAction;\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-3\" style={{ width: '100%' }}>\r\n      {confirmModal?.action === 'reschedule' ? (\r\n        <Reschedule booking={booking}></Reschedule>\r\n      ) : (\r\n        <ConfirmModal\r\n          {...confirmModal}\r\n          onClose={() => setConfirmModal({ open: false })}\r\n        >\r\n          {confirmModal?.children}\r\n        </ConfirmModal>\r\n      )}\r\n\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={8}>\r\n            <Card.Title className=\"card-title\">\r\n              {booking?.customer.display_name}\r\n            </Card.Title>\r\n            <Card.Text className=\"card-text\">\r\n              {booking.date},{' '}\r\n              <span className=\"text-capitalize\">{booking?.slot?.day}</span>,{' '}\r\n              {formatTime(booking?.slot?.start_time)} -{' '}\r\n              {formatTime(booking?.slot?.end_time)}\r\n            </Card.Text>\r\n            <Card.Text className=\"card-text\">\r\n              {booking?.service?.name} - ({CURRENCY_SYMBOL}\r\n              {booking?.service?.price_amount})\r\n              <br />\r\n              Payment: <Badge>{booking?.payment?.status}</Badge>\r\n            </Card.Text>\r\n          </Col>\r\n          <Col xs={4} className=\"text-right\">\r\n            <RenderActions />\r\n            {['pending', 'confirmed'].includes(booking?.status) && (\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"ms-2\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  setConfirmModal({\r\n                    open: true,\r\n                    type: 'danger',\r\n                    title: 'Cancel Booking',\r\n                    confirmButton: 'Yes, Cancel',\r\n                    body: 'Are you sure want to cancel this booking?',\r\n                    onConfirm: () => {\r\n                      handleBooking('canceled');\r\n                    },\r\n                    action: 'canceled',\r\n                  });\r\n                }}\r\n              >\r\n                <Loading\r\n                  loading={\r\n                    updateBookingResult?.isLoading &&\r\n                    confirmModal?.action === 'canceled'\r\n                  }\r\n                >\r\n                  Cancel\r\n                </Loading>\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BookingCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Nav, Tab, Card } from 'react-bootstrap';\r\nimport './Bookings.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BookingCard from './BookingCard';\r\nimport Loader from './../common/Loader';\r\nimport { useGetBookingsQuery } from './../../store/slices';\r\n\r\nconst Bookings = () => {\r\n  const [key, setKey] = useState('all');\r\n  const [bookings, setBookings] = useState({\r\n    all: [],\r\n    upcoming: [],\r\n    pending: [],\r\n    completed: [],\r\n    canceled: [],\r\n  });\r\n  const { data, isLoading, isFetching } = useGetBookingsQuery({});\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const upcoming = data.filter((item) => item?.status === 'confirmed');\r\n      const pending = data.filter((item) => item?.status === 'pending');\r\n      const completed = data.filter((item) => item?.status === 'completed');\r\n      const canceled = data.filter((item) => item?.status === 'canceled');\r\n      setBookings({\r\n        all: data,\r\n        upcoming,\r\n        pending,\r\n        completed,\r\n        canceled,\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const tabData = [\r\n    {\r\n      key: 'all',\r\n      label: 'All',\r\n      count: bookings?.all?.length || 0,\r\n      data: bookings?.all,\r\n    },\r\n    {\r\n      key: 'upcoming',\r\n      label: 'Upcoming',\r\n      count: bookings?.upcoming?.length || 0,\r\n      data: bookings?.upcoming,\r\n    },\r\n    {\r\n      key: 'unconfirmed',\r\n      label: 'Unconfirmed',\r\n      count: bookings?.pending?.length || 0,\r\n      data: bookings?.pending,\r\n    },\r\n    {\r\n      key: 'past',\r\n      label: 'Completed',\r\n      count: bookings?.completed?.length || 0,\r\n      data: bookings?.completed,\r\n    },\r\n    {\r\n      key: 'canceled',\r\n      label: 'Canceled',\r\n      count: bookings?.canceled?.length || 0,\r\n      data: bookings?.canceled,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div id=\"booking\" className=\"bookings-container\">\r\n      <Container fluid className=\"bookings-wrapper\">\r\n        <ToastContainer />\r\n        <Loader loading={isLoading || isFetching} />\r\n\r\n        {/* Main Content */}\r\n        <div className=\"bookings-content\">\r\n          <Tab.Container\r\n            id=\"bookings-tabs\"\r\n            activeKey={key}\r\n            onSelect={(k) => setKey(k)}\r\n          >\r\n            {/* Navigation Tabs */}\r\n            <div className=\"tabs-wrapper\">\r\n              <Nav variant=\"pills\" className=\"bookings-nav\">\r\n                {tabData.map((tab) => (\r\n                  <Nav.Item key={tab.key} className=\"nav-item-custom\">\r\n                    <Nav.Link eventKey={tab.key} className=\"nav-link-custom\">\r\n                      <div className=\"tab-content\">\r\n                        <span className=\"tab-label\">{tab.label}</span>\r\n                        <span className=\"tab-count\">{tab.count}</span>\r\n                      </div>\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                ))}\r\n              </Nav>\r\n            </div>\r\n\r\n            {/* Tab Content */}\r\n            <div className=\"tab-content-wrapper\">\r\n              <Tab.Content>\r\n                {tabData.map((tab) => (\r\n                  <Tab.Pane key={tab.key} eventKey={tab.key}>\r\n                    <div className=\"bookings-section\">\r\n                      <div className=\"section-header\">\r\n                        <h3 className=\"section-title\">{tab.label} Bookings</h3>\r\n                        <span className=\"section-count\">\r\n                          {tab.count} appointments\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"bookings-grid\">\r\n                        {tab.data && tab.data.length > 0 ? (\r\n                          tab.data.map((booking) => (\r\n                            <div\r\n                              key={booking.booking_id}\r\n                              className=\"booking-item\"\r\n                            >\r\n                              <BookingCard booking={booking} />\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <NoBookingsMessage title={tab.label.toLowerCase()} />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                ))}\r\n              </Tab.Content>\r\n            </div>\r\n          </Tab.Container>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoBookingsMessage = ({ title }) => (\r\n  <Card className=\"no-bookings-card\">\r\n    <Card.Body className=\"no-bookings-body\">\r\n      <div className=\"no-bookings-icon\">📅</div>\r\n      <Card.Title className=\"no-bookings-title\">No {title} bookings</Card.Title>\r\n      <Card.Text className=\"no-bookings-text\">\r\n        {title === 'all'\r\n          ? 'You have no bookings yet. Start by creating your availability.'\r\n          : `You have no ${title} bookings. As soon as someone books a time with you it will show up here.`}\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default Bookings;\r\n","export const formatTime = (time) => {\r\n  if (!time) {\r\n    return '00:00';\r\n  }\r\n  let [hours, minutes] = time?.split(':');\r\n  const ampm = hours < 12 ? 'AM' : 'PM';\r\n  hours = hours % 12 || 12;\r\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')} ${ampm}`;\r\n};\r\n\r\nexport const isExpireDate = (bookingDate) => {\r\n  const now = new Date();\r\n  const today = new Date(\r\n    Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()),\r\n  );\r\n  bookingDate = new Date(bookingDate);\r\n  return bookingDate.toISOString() < today.toISOString();\r\n};\r\n\r\nexport const generateTimeOptions = (statEnd) => {\r\n  const times = [];\r\n  const start = new Date(\r\n    0,\r\n    0,\r\n    0,\r\n    statEnd === 'start' ? 0 : 0,\r\n    statEnd === 'start' ? 0 : 30,\r\n    0,\r\n  );\r\n  const end = new Date(\r\n    0,\r\n    0,\r\n    0,\r\n    statEnd === 'start' ? 23 : 24,\r\n    statEnd === 'start' ? 30 : 0,\r\n    0,\r\n  );\r\n\r\n  while (start <= end) {\r\n    const hours = start.getHours() % 12 || 12;\r\n    const minutes = start.getMinutes().toString().padStart(2, '0');\r\n    const ampm = start.getHours() < 12 ? 'AM' : 'PM';\r\n\r\n    times.push({\r\n      value: `${start.getHours()}:${minutes}`,\r\n      label: `${hours.toString().padStart(2, '0')}:${minutes} ${ampm}`,\r\n    });\r\n    start.setMinutes(start.getMinutes() + 30);\r\n  }\r\n\r\n  return times;\r\n};\r\n\r\nexport const prepareAvailabilitySlots = (slots = []) => {\r\n  const results = [];\r\n  for (const slot of slots) {\r\n    if (results[slot?.day?.toLowerCase()]) {\r\n      results[slot?.day?.toLowerCase()].timeSlots.push({\r\n        ...slot,\r\n        start: {\r\n          value: slot?.start_time,\r\n          label: formatTime(slot?.start_time),\r\n        },\r\n        end: {\r\n          value: slot?.end_time,\r\n          label: formatTime(slot?.end_time),\r\n        },\r\n      });\r\n    } else {\r\n      results[slot?.day?.toLowerCase()] = {\r\n        enabled: true,\r\n        day: slot?.day,\r\n        timeSlots: [\r\n          {\r\n            ...slot,\r\n            start: {\r\n              value: slot?.start_time,\r\n              label: formatTime(slot?.start_time),\r\n            },\r\n            end: {\r\n              value: slot?.end_time,\r\n              label: formatTime(slot?.end_time),\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n  return results;\r\n};\r\n","import { ScaleLoader } from 'react-spinners';\r\n\r\nexport default function Loading(props) {\r\n  if (props?.children) {\r\n    return (\r\n      <div className=\"d-flex flex-col justify-content-center align-items-center gap-1\">\r\n        <ScaleLoader height={25} color={'#18A0FB'} {...props} />\r\n        <strong>{props?.children}</strong>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ScaleLoader height={25} color={'#18A0FB'} {...props} />;\r\n}\r\n"],"names":["_ref","open","type","title","body","loading","disable","confirmButton","onConfirm","closeButton","onClose","children","show","setShow","useState","handleClose","useEffect","_jsx","_Fragment","_jsxs","Modal","onHide","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","onClick","disabled","handleConfirm","Loading","TimeSlot","slot","Stack","direction","gap","Badge","bg","formatTime","start_time","end_time","_ref2","_booking$slot","_booking$slot3","booking","validation","setValidation","valid","formData","setFormData","booking_id","date","slot_id","data","isLoading","isFetching","useGetAvailabilitySlotsQuery","updateBooking","updateBookingResult","useUpdateBookingMutation","Array","isArray","length","find","item","_booking$slot2","_objectSpread","handleChange","field","event","_event$target","target","value","handleValidation","_ref3","payload","Object","assign","_objectDestructuringEmpty","toDate","Date","getUTCFullYear","getUTCMonth","getUTCDate","Form","noValidate","validated","Control","onChange","isInvalid","Feedback","Row","className","Col","xs","Label","day","Alert","map","Check","checked","label","id","style","fontSize","async","bookingId","_booking$service","_booking$service2","_booking$payment","confirmModal","setConfirmModal","action","handleBooking","status","state","RenderActions","buttonAction","isExpireDate","size","isDatePassed","Card","width","Reschedule","ConfirmModal","customer","display_name","Text","service","name","CURRENCY_SYMBOL","price_amount","payment","includes","NoBookingsMessage","concat","Bookings","_bookings$all","_bookings$upcoming","_bookings$pending","_bookings$completed","_bookings$canceled","key","setKey","bookings","setBookings","all","upcoming","pending","completed","canceled","useGetBookingsQuery","filter","tabData","count","Container","fluid","ToastContainer","Loader","Tab","activeKey","onSelect","k","Nav","tab","Item","Link","eventKey","Content","Pane","BookingCard","toLowerCase","time","hours","minutes","split","ampm","toString","padStart","bookingDate","now","today","UTC","toISOString","generateTimeOptions","statEnd","times","start","end","getHours","getMinutes","push","setMinutes","prepareAvailabilitySlots","slots","arguments","undefined","results","_slot$day","_slot$day2","_slot$day3","timeSlots","enabled","props","ScaleLoader","height","color"],"sourceRoot":""}