{"version":3,"file":"static/js/725.f45167ab.chunk.js","mappings":"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","sources":["components/dashboard/dashboard.js","components/common/Loading.js","components/common/ConsultationList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useGetBookingsQuery } from '../../store/slices/bookings.slice';\r\nimport { useGetAvailabilitySlotsQuery } from '../../store/slices/availability.slice';\r\nimport { fetchUserProfile } from '../../store/slices/auth.slice';\r\nimport { API_BASE_URL } from '../../store/api/api';\r\nimport { useConsultations } from '../../contexts/ConsultationContext';\r\nimport Loading from '../common/Loading';\r\nimport ConsultationList from '../common/ConsultationList';\r\nimport './dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    isAuthenticated,\r\n    loading: authLoading,\r\n  } = useSelector((state) => state.auth);\r\n\r\n  const { consultations } = useConsultations();\r\n\r\n  // Fetch user profile on component mount\r\n  useEffect(() => {\r\n    if (isAuthenticated && !user) {\r\n      dispatch(fetchUserProfile());\r\n    }\r\n  }, [dispatch, isAuthenticated, user]);\r\n\r\n  // Fetch bookings data\r\n  const { data: bookingsData, isLoading: bookingsLoading } =\r\n    useGetBookingsQuery({\r\n      status: 'all',\r\n      limit: 10,\r\n    });\r\n\r\n  // Fetch availability slots\r\n  const { data: availabilityData, isLoading: availabilityLoading } =\r\n    useGetAvailabilitySlotsQuery({});\r\n\r\n  const bookings = bookingsData || [];\r\n  const availabilitySlots = availabilityData || [];\r\n\r\n  // Calculate dashboard statistics\r\n  const calculateStats = () => {\r\n    const today = new Date();\r\n    const startOfDay = new Date(today.setHours(0, 0, 0, 0));\r\n    const endOfDay = new Date(today.setHours(23, 59, 59, 999));\r\n\r\n    const todayBookings = bookings.filter((booking) => {\r\n      const bookingDate = new Date(booking.appointmentDate);\r\n      return bookingDate >= startOfDay && bookingDate <= endOfDay;\r\n    });\r\n\r\n    const confirmedBookings = bookings.filter(\r\n      (booking) => booking.status === 'confirmed',\r\n    );\r\n\r\n    const pendingBookings = bookings.filter(\r\n      (booking) => booking.status === 'pending',\r\n    );\r\n\r\n    const completedBookings = bookings.filter(\r\n      (booking) => booking.status === 'completed',\r\n    );\r\n\r\n    return {\r\n      totalBookings: bookings.length,\r\n      todayBookings: todayBookings.length,\r\n      confirmedBookings: confirmedBookings.length,\r\n      pendingBookings: pendingBookings.length,\r\n      completedBookings: completedBookings.length,\r\n      availableSlots: availabilitySlots.length,\r\n    };\r\n  };\r\n\r\n  const stats = calculateStats();\r\n\r\n  // Get recent bookings (last 5)\r\n  const recentBookings = bookings\r\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n    .slice(0, 5);\r\n\r\n  // Get upcoming appointments\r\n  const upcomingAppointments = bookings\r\n    .filter((booking) => {\r\n      const appointmentDate = new Date(booking.appointmentDate);\r\n      return appointmentDate > new Date() && booking.status === 'confirmed';\r\n    })\r\n    .sort((a, b) => new Date(a.appointmentDate) - new Date(b.appointmentDate))\r\n    .slice(0, 3);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n    });\r\n  };\r\n\r\n  const formatTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const getStatusBadgeClass = (status) => {\r\n    switch (status) {\r\n      case 'confirmed':\r\n        return 'badge-success';\r\n      case 'pending':\r\n        return 'badge-warning';\r\n      case 'completed':\r\n        return 'badge-info';\r\n      case 'cancelled':\r\n        return 'badge-danger';\r\n      default:\r\n        return 'badge-secondary';\r\n    }\r\n  };\r\n\r\n  // Get profile picture URL - Fixed to use correct API base URL\r\n  const getProfilePictureUrl = () => {\r\n    // Debug log to see what's in user object\r\n    console.log('🖼️ [DASHBOARD] User object:', user);\r\n    console.log('🖼️ [DASHBOARD] PhotoUrl field:', user?.photoUrl);\r\n    console.log('🖼️ [DASHBOARD] API Base URL:', API_BASE_URL);\r\n\r\n    if (user?.photoUrl) {\r\n      // If it's already a full URL (starts with http), use it directly\r\n      if (user.photoUrl.startsWith('http')) {\r\n        console.log('🖼️ [DASHBOARD] Using full URL:', user.photoUrl);\r\n        return user.photoUrl;\r\n      }\r\n\r\n      // If it's a relative path, construct the full URL using API_BASE_URL\r\n      // Remove leading slash if present to avoid double slashes\r\n      const cleanPath = user.photoUrl.startsWith('/')\r\n        ? user.photoUrl.substring(1)\r\n        : user.photoUrl;\r\n      const fullImageUrl = `${API_BASE_URL}${cleanPath}`;\r\n      console.log('🖼️ [DASHBOARD] Constructed image URL:', fullImageUrl);\r\n      return fullImageUrl;\r\n    }\r\n\r\n    // Fallback to placeholder\r\n    console.log('🖼️ [DASHBOARD] No photoUrl found, using placeholder');\r\n    return '/placeholder.png';\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Please log in to view the dashboard</div>;\r\n  }\r\n\r\n  if (bookingsLoading || availabilityLoading || authLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Welcome Section */}\r\n      <div className=\"welcome-section\">\r\n        <div className=\"welcome-content\">\r\n          <h1>\r\n            Welcome back, Dr.{' '}\r\n            {user?.display_name || user?.firstName || 'Doctor'}!\r\n          </h1>\r\n          <p className=\"welcome-subtitle\">\r\n            Here's what's happening with your practice today\r\n          </p>\r\n        </div>\r\n        <div className=\"welcome-date\">\r\n          <span>\r\n            {new Date().toLocaleDateString('en-US', {\r\n              weekday: 'long',\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n            })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card stat-card-success\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-alt\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.totalBookings}</h3>\r\n            <p>Total Bookings</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stat-card stat-card-primary\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-check\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.todayBookings}</h3>\r\n            <p>Today's Appointments</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stat-card stat-card-warning\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-clock\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.pendingBookings}</h3>\r\n            <p>Pending Approval</p>\r\n          </div>\r\n        </div>\r\n        {/* \r\n        <div className=\"stat-card stat-card-info\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-plus\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.availableSlots}</h3>\r\n            <p>Available Slots</p>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"dashboard-grid\">\r\n        {/* Upcoming Appointments */}\r\n        <div className=\"dashboard-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Upcoming Appointments</h3>\r\n            <span className=\"card-count\">{upcomingAppointments.length}</span>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {upcomingAppointments.length > 0 ? (\r\n              <div className=\"appointments-list\">\r\n                {upcomingAppointments.map((appointment) => (\r\n                  <div key={appointment.id} className=\"appointment-item\">\r\n                    <div className=\"appointment-time\">\r\n                      <span className=\"time\">\r\n                        {formatTime(appointment.appointmentDate)}\r\n                      </span>\r\n                      <span className=\"date\">\r\n                        {formatDate(appointment.appointmentDate)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"appointment-details\">\r\n                      <h4>{appointment.patientName || 'Patient'}</h4>\r\n                      <p>{appointment.service || 'General Consultation'}</p>\r\n                    </div>\r\n                    <div className=\"appointment-status\">\r\n                      <span\r\n                        className={`status-badge ${getStatusBadgeClass(appointment.status)}`}\r\n                      >\r\n                        {appointment.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <i className=\"fas fa-calendar-times\"></i>\r\n                <p>No upcoming appointments</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Bookings */}\r\n        <div className=\"dashboard-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Recent Bookings</h3>\r\n            <span className=\"card-count\">{recentBookings.length}</span>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {recentBookings.length > 0 ? (\r\n              <div className=\"bookings-list\">\r\n                {recentBookings.map((booking) => (\r\n                  <div key={booking.id} className=\"booking-item\">\r\n                    <div className=\"booking-info\">\r\n                      <h4>{booking.patientName || 'Patient'}</h4>\r\n                      <p>\r\n                        {formatDate(booking.appointmentDate)} at{' '}\r\n                        {formatTime(booking.appointmentDate)}\r\n                      </p>\r\n                      <span className=\"booking-service\">\r\n                        {booking.service || 'General Consultation'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"booking-status\">\r\n                      <span\r\n                        className={`status-badge ${getStatusBadgeClass(booking.status)}`}\r\n                      >\r\n                        {booking.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <i className=\"fas fa-inbox\"></i>\r\n                <p>No recent bookings</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Doctor Info Card */}\r\n        <div className=\"dashboard-card doctor-profile-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Profile Overview</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"doctor-info\">\r\n              <div className=\"doctor-avatar\">\r\n                <img\r\n                  src={getProfilePictureUrl()}\r\n                  alt=\"Doctor Avatar\"\r\n                  onError={(e) => {\r\n                    console.log(\r\n                      '🖼️ [DASHBOARD] Image failed to load, using placeholder',\r\n                    );\r\n                    console.log('🖼️ [DASHBOARD] Failed URL was:', e.target.src);\r\n                    e.target.src = '/placeholder.png';\r\n                  }}\r\n                  onLoad={() => {\r\n                    console.log('🖼️ [DASHBOARD] Image loaded successfully');\r\n                  }}\r\n                />\r\n                <div className=\"avatar-status\">\r\n                  <i className=\"fas fa-circle\"></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"doctor-details\">\r\n                <h4>\r\n                  Dr.{' '}\r\n                  {user?.display_name ||\r\n                    `${user?.firstName} ${user?.lastName}` ||\r\n                    'Doctor'}\r\n                </h4>\r\n                <p className=\"doctor-specialty\">\r\n                  {user?.title || user?.specialty || 'General Medicine'}\r\n                </p>\r\n                <div className=\"doctor-contact\">\r\n                  <div className=\"contact-item\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <span>{user?.email}</span>\r\n                  </div>\r\n                  <div className=\"contact-item\">\r\n                    <i className=\"fas fa-phone\"></i>\r\n                    <span>{user?.phone || 'Phone not provided'}</span>\r\n                  </div>\r\n                  {user?.address && (\r\n                    <div className=\"contact-item\">\r\n                      <i className=\"fas fa-map-marker-alt\"></i>\r\n                      <span>{user.address}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"doctor-consultations\">\r\n                  <ConsultationList\r\n                    consultations={consultations}\r\n                    maxItems={3}\r\n                    showTitle={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { ScaleLoader } from 'react-spinners';\r\n\r\nexport default function Loading(props) {\r\n  if (props?.children) {\r\n    return (\r\n      <div className=\"d-flex flex-col justify-content-center align-items-center gap-1\">\r\n        <ScaleLoader height={25} color={'#18A0FB'} {...props} />\r\n        <strong>{props?.children}</strong>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ScaleLoader height={25} color={'#18A0FB'} {...props} />;\r\n}\r\n","import React from 'react';\r\nimport './ConsultationList.css';\r\n\r\nconst ConsultationList = ({\r\n  consultations,\r\n  showTitle = true,\r\n  maxItems = null,\r\n}) => {\r\n  const displayConsultations = maxItems\r\n    ? consultations.slice(0, maxItems)\r\n    : consultations;\r\n\r\n  return (\r\n    <div className=\"consultation-list-container\">\r\n      {showTitle && <h5>Consultation Services</h5>}\r\n      <div className=\"consultations-wrapper\">\r\n        {displayConsultations && displayConsultations.length > 0 ? (\r\n          displayConsultations.map((consultation) => (\r\n            <div key={consultation.id} className=\"consultation-item\">\r\n              <div className=\"consultation-info\">\r\n                <h6 className=\"consultation-name\">{consultation.name}</h6>\r\n                <div className=\"consultation-details\">\r\n                  <span className=\"consultation-duration\">\r\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                      <path\r\n                        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\r\n                        fill=\"currentColor\"\r\n                      />\r\n                      <path\r\n                        d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67V7z\"\r\n                        fill=\"currentColor\"\r\n                      />\r\n                    </svg>\r\n                    {consultation.duration}\r\n                  </span>\r\n                  <span className=\"consultation-price\">\r\n                    ₹{consultation.price}\r\n                  </span>\r\n                </div>\r\n                {consultation.description && (\r\n                  <p className=\"consultation-description\">\r\n                    {consultation.description}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"empty-consultations\">\r\n            <p>No consultation services created yet.</p>\r\n            <small>\r\n              Create your first consultation service to get started.\r\n            </small>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {consultations.length > maxItems && maxItems && (\r\n        <div className=\"more-consultations\">\r\n          <small>+{consultations.length - maxItems} more services</small>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsultationList;\r\n"],"names":["Dashboard","dispatch","useDispatch","user","isAuthenticated","loading","authLoading","useSelector","state","auth","consultations","useConsultations","useEffect","fetchUserProfile","data","bookingsData","isLoading","bookingsLoading","useGetBookingsQuery","status","limit","availabilityData","availabilityLoading","useGetAvailabilitySlotsQuery","bookings","availabilitySlots","stats","calculateStats","today","Date","startOfDay","setHours","endOfDay","todayBookings","filter","booking","bookingDate","appointmentDate","confirmedBookings","pendingBookings","completedBookings","totalBookings","length","availableSlots","recentBookings","sort","a","b","createdAt","slice","upcomingAppointments","formatDate","dateString","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","getStatusBadgeClass","_jsx","Loading","_jsxs","className","children","display_name","firstName","weekday","map","appointment","patientName","service","concat","id","src","getProfilePictureUrl","console","log","photoUrl","API_BASE_URL","startsWith","cleanPath","substring","fullImageUrl","alt","onError","e","target","onLoad","lastName","title","specialty","email","phone","address","ConsultationList","maxItems","showTitle","props","ScaleLoader","_objectSpread","height","color","_ref","displayConsultations","consultation","name","width","viewBox","fill","d","duration","price","description"],"sourceRoot":""}