{"version":3,"file":"static/js/725.26ca256e.chunk.js","mappings":"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","sources":["components/common/Loading.js","components/dashboard/dashboard.js"],"sourcesContent":["import { ScaleLoader } from 'react-spinners';\r\n\r\nexport default function Loading(props) {\r\n  if (props?.children) {\r\n    return (\r\n      <div className=\"d-flex flex-col justify-content-center align-items-center gap-1\">\r\n        <ScaleLoader height={25} color={'#18A0FB'} {...props} />\r\n        <strong>{props?.children}</strong>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ScaleLoader height={25} color={'#18A0FB'} {...props} />;\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetBookingsQuery } from '../../store/slices/bookings.slice';\nimport { useGetAvailabilitySlotsQuery } from '../../store/slices/availability.slice';\nimport { fetchUserProfile } from '../../store/slices/auth.slice';\nimport { API_BASE_URL } from '../../store/api/api';\nimport Loading from '../common/Loading';\nimport './dashboard.css';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const {\n    user,\n    isAuthenticated,\n    loading: authLoading,\n  } = useSelector((state) => state.auth);\n  const [selectedPeriod, setSelectedPeriod] = useState('today');\n\n  // Fetch user profile on component mount\n  useEffect(() => {\n    if (isAuthenticated && !user) {\n      dispatch(fetchUserProfile());\n    }\n  }, [dispatch, isAuthenticated, user]);\n\n  // Fetch bookings data\n  const {\n    data: bookingsData,\n    isLoading: bookingsLoading,\n    error: bookingsError,\n  } = useGetBookingsQuery({\n    status: 'all',\n    limit: 10,\n  });\n\n  // Fetch availability slots\n  const { data: availabilityData, isLoading: availabilityLoading } =\n    useGetAvailabilitySlotsQuery({});\n\n  const bookings = bookingsData || [];\n  const availabilitySlots = availabilityData || [];\n\n  // Calculate dashboard statistics\n  const calculateStats = () => {\n    const today = new Date();\n    const startOfDay = new Date(today.setHours(0, 0, 0, 0));\n    const endOfDay = new Date(today.setHours(23, 59, 59, 999));\n\n    const todayBookings = bookings.filter((booking) => {\n      const bookingDate = new Date(booking.appointmentDate);\n      return bookingDate >= startOfDay && bookingDate <= endOfDay;\n    });\n\n    const confirmedBookings = bookings.filter(\n      (booking) => booking.status === 'confirmed',\n    );\n\n    const pendingBookings = bookings.filter(\n      (booking) => booking.status === 'pending',\n    );\n\n    const completedBookings = bookings.filter(\n      (booking) => booking.status === 'completed',\n    );\n\n    return {\n      totalBookings: bookings.length,\n      todayBookings: todayBookings.length,\n      confirmedBookings: confirmedBookings.length,\n      pendingBookings: pendingBookings.length,\n      completedBookings: completedBookings.length,\n      availableSlots: availabilitySlots.length,\n    };\n  };\n\n  const stats = calculateStats();\n\n  // Get recent bookings (last 5)\n  const recentBookings = bookings\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n    .slice(0, 5);\n\n  // Get upcoming appointments\n  const upcomingAppointments = bookings\n    .filter((booking) => {\n      const appointmentDate = new Date(booking.appointmentDate);\n      return appointmentDate > new Date() && booking.status === 'confirmed';\n    })\n    .sort((a, b) => new Date(a.appointmentDate) - new Date(b.appointmentDate))\n    .slice(0, 3);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'confirmed':\n        return 'badge-success';\n      case 'pending':\n        return 'badge-warning';\n      case 'completed':\n        return 'badge-info';\n      case 'cancelled':\n        return 'badge-danger';\n      default:\n        return 'badge-secondary';\n    }\n  };\n\n  // Get profile picture URL - Fixed to use correct API base URL\n  const getProfilePictureUrl = () => {\n    // Debug log to see what's in user object\n    console.log('🖼️ [DASHBOARD] User object:', user);\n    console.log('🖼️ [DASHBOARD] PhotoUrl field:', user?.photoUrl);\n    console.log('🖼️ [DASHBOARD] API Base URL:', API_BASE_URL);\n\n    if (user?.photoUrl) {\n      // If it's already a full URL (starts with http), use it directly\n      if (user.photoUrl.startsWith('http')) {\n        console.log('🖼️ [DASHBOARD] Using full URL:', user.photoUrl);\n        return user.photoUrl;\n      }\n\n      // If it's a relative path, construct the full URL using API_BASE_URL\n      // Remove leading slash if present to avoid double slashes\n      const cleanPath = user.photoUrl.startsWith('/')\n        ? user.photoUrl.substring(1)\n        : user.photoUrl;\n      const fullImageUrl = `${API_BASE_URL}${cleanPath}`;\n      console.log('🖼️ [DASHBOARD] Constructed image URL:', fullImageUrl);\n      return fullImageUrl;\n    }\n\n    // Fallback to placeholder\n    console.log('🖼️ [DASHBOARD] No photoUrl found, using placeholder');\n    return '/placeholder.png';\n  };\n\n  if (!isAuthenticated) {\n    return <div>Please log in to view the dashboard.</div>;\n  }\n\n  if (bookingsLoading || availabilityLoading || authLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* Welcome Section */}\n      <div className=\"welcome-section\">\n        <div className=\"welcome-content\">\n          <h1>\n            Welcome back, Dr.{' '}\n            {user?.display_name || user?.firstName || 'Doctor'}!\n          </h1>\n          <p className=\"welcome-subtitle\">\n            Here's what's happening with your practice today\n          </p>\n        </div>\n        <div className=\"welcome-date\">\n          <span>\n            {new Date().toLocaleDateString('en-US', {\n              weekday: 'long',\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n            })}\n          </span>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"stats-grid\">\n        <div className=\"stat-card stat-card-success\">\n          <div className=\"stat-icon\">\n            <i className=\"fas fa-calendar-alt\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.totalBookings}</h3>\n            <p>Total Bookings</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card stat-card-primary\">\n          <div className=\"stat-icon\">\n            <i className=\"fas fa-calendar-check\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.todayBookings}</h3>\n            <p>Today's Appointments</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card stat-card-warning\">\n          <div className=\"stat-icon\">\n            <i className=\"fas fa-clock\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.pendingBookings}</h3>\n            <p>Pending Approval</p>\n          </div>\n        </div>\n        {/* \n        <div className=\"stat-card stat-card-info\">\n          <div className=\"stat-icon\">\n            <i className=\"fas fa-calendar-plus\"></i>\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.availableSlots}</h3>\n            <p>Available Slots</p>\n          </div>\n        </div> */}\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"dashboard-grid\">\n        {/* Upcoming Appointments */}\n        <div className=\"dashboard-card\">\n          <div className=\"card-header\">\n            <h3>Upcoming Appointments</h3>\n            <span className=\"card-count\">{upcomingAppointments.length}</span>\n          </div>\n          <div className=\"card-content\">\n            {upcomingAppointments.length > 0 ? (\n              <div className=\"appointments-list\">\n                {upcomingAppointments.map((appointment) => (\n                  <div key={appointment.id} className=\"appointment-item\">\n                    <div className=\"appointment-time\">\n                      <span className=\"time\">\n                        {formatTime(appointment.appointmentDate)}\n                      </span>\n                      <span className=\"date\">\n                        {formatDate(appointment.appointmentDate)}\n                      </span>\n                    </div>\n                    <div className=\"appointment-details\">\n                      <h4>{appointment.patientName || 'Patient'}</h4>\n                      <p>{appointment.service || 'General Consultation'}</p>\n                    </div>\n                    <div className=\"appointment-status\">\n                      <span\n                        className={`status-badge ${getStatusBadgeClass(appointment.status)}`}\n                      >\n                        {appointment.status}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"empty-state\">\n                <i className=\"fas fa-calendar-times\"></i>\n                <p>No upcoming appointments</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Recent Bookings */}\n        <div className=\"dashboard-card\">\n          <div className=\"card-header\">\n            <h3>Recent Bookings</h3>\n            <span className=\"card-count\">{recentBookings.length}</span>\n          </div>\n          <div className=\"card-content\">\n            {recentBookings.length > 0 ? (\n              <div className=\"bookings-list\">\n                {recentBookings.map((booking) => (\n                  <div key={booking.id} className=\"booking-item\">\n                    <div className=\"booking-info\">\n                      <h4>{booking.patientName || 'Patient'}</h4>\n                      <p>\n                        {formatDate(booking.appointmentDate)} at{' '}\n                        {formatTime(booking.appointmentDate)}\n                      </p>\n                      <span className=\"booking-service\">\n                        {booking.service || 'General Consultation'}\n                      </span>\n                    </div>\n                    <div className=\"booking-status\">\n                      <span\n                        className={`status-badge ${getStatusBadgeClass(booking.status)}`}\n                      >\n                        {booking.status}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"empty-state\">\n                <i className=\"fas fa-inbox\"></i>\n                <p>No recent bookings</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Doctor Info Card */}\n        <div className=\"dashboard-card doctor-profile-card\">\n          <div className=\"card-header\">\n            <h3>Profile Overview</h3>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"doctor-info\">\n              <div className=\"doctor-avatar\">\n                <img\n                  src={getProfilePictureUrl()}\n                  alt=\"Doctor Avatar\"\n                  onError={(e) => {\n                    console.log(\n                      '🖼️ [DASHBOARD] Image failed to load, using placeholder',\n                    );\n                    console.log('🖼️ [DASHBOARD] Failed URL was:', e.target.src);\n                    e.target.src = '/placeholder.png';\n                  }}\n                  onLoad={() => {\n                    console.log('🖼️ [DASHBOARD] Image loaded successfully');\n                  }}\n                />\n                <div className=\"avatar-status\">\n                  <i className=\"fas fa-circle\"></i>\n                </div>\n              </div>\n              <div className=\"doctor-details\">\n                <h4>\n                  Dr.{' '}\n                  {user?.display_name ||\n                    `${user?.firstName} ${user?.lastName}` ||\n                    'Doctor'}\n                </h4>\n                <p className=\"doctor-specialty\">\n                  {user?.title || user?.specialty || 'General Medicine'}\n                </p>\n                <div className=\"doctor-contact\">\n                  <div className=\"contact-item\">\n                    <i className=\"fas fa-envelope\"></i>\n                    <span>{user?.email}</span>\n                  </div>\n                  <div className=\"contact-item\">\n                    <i className=\"fas fa-phone\"></i>\n                    <span>{user?.phone || 'Phone not provided'}</span>\n                  </div>\n                  {user?.address && (\n                    <div className=\"contact-item\">\n                      <i className=\"fas fa-map-marker-alt\"></i>\n                      <span>{user.address}</span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"doctor-services\">\n                  <strong>Services:</strong>\n                  <div className=\"services-list\">\n                    {user?.services && user.services.length > 0 ? (\n                      user.services.slice(0, 3).map((service, index) => (\n                        <span key={index} className=\"service-tag\">\n                          {service.name || service}\n                        </span>\n                      ))\n                    ) : (\n                      <span className=\"no-services\">No services listed</span>\n                    )}\n                    {user?.services && user.services.length > 3 && (\n                      <span className=\"service-tag more-services\">\n                        +{user.services.length - 3} more\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["Loading","props","children","_jsxs","className","_jsx","ScaleLoader","height","color","Dashboard","dispatch","useDispatch","user","isAuthenticated","loading","authLoading","useSelector","state","auth","selectedPeriod","setSelectedPeriod","useState","useEffect","fetchUserProfile","data","bookingsData","isLoading","bookingsLoading","error","bookingsError","useGetBookingsQuery","status","limit","availabilityData","availabilityLoading","useGetAvailabilitySlotsQuery","bookings","availabilitySlots","stats","calculateStats","today","Date","startOfDay","setHours","endOfDay","todayBookings","filter","booking","bookingDate","appointmentDate","confirmedBookings","pendingBookings","completedBookings","totalBookings","length","availableSlots","recentBookings","sort","a","b","createdAt","slice","upcomingAppointments","formatDate","dateString","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","getStatusBadgeClass","display_name","firstName","weekday","map","appointment","patientName","service","concat","id","src","getProfilePictureUrl","console","log","photoUrl","API_BASE_URL","startsWith","cleanPath","substring","fullImageUrl","alt","onError","e","target","onLoad","lastName","title","specialty","email","phone","address","services","index","name"],"sourceRoot":""}