{"version":3,"file":"static/js/725.48e4c71d.chunk.js","mappings":"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","sources":["components/common/Loading.js","components/dashboard/dashboard.js"],"sourcesContent":["import { ScaleLoader } from 'react-spinners';\r\n\r\nexport default function Loading(props) {\r\n  if (props?.children) {\r\n    return (\r\n      <div className=\"d-flex flex-col justify-content-center align-items-center gap-1\">\r\n        <ScaleLoader height={25} color={'#18A0FB'} {...props} />\r\n        <strong>{props?.children}</strong>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ScaleLoader height={25} color={'#18A0FB'} {...props} />;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useGetBookingsQuery } from '../../store/slices/bookings.slice';\r\nimport { useGetAvailabilitySlotsQuery } from '../../store/slices/availability.slice';\r\nimport { fetchUserProfile } from '../../store/slices/auth.slice';\r\nimport { API_BASE_URL } from '../../store/api/api';\r\nimport Loading from '../common/Loading';\r\nimport './dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    isAuthenticated,\r\n    loading: authLoading,\r\n  } = useSelector((state) => state.auth);\r\n\r\n  // Fetch user profile on component mount\r\n  useEffect(() => {\r\n    if (isAuthenticated && !user) {\r\n      dispatch(fetchUserProfile());\r\n    }\r\n  }, [dispatch, isAuthenticated, user]);\r\n\r\n  // Fetch bookings data\r\n  const { data: bookingsData, isLoading: bookingsLoading } =\r\n    useGetBookingsQuery({\r\n      status: 'all',\r\n      limit: 10,\r\n    });\r\n\r\n  // Fetch availability slots\r\n  const { data: availabilityData, isLoading: availabilityLoading } =\r\n    useGetAvailabilitySlotsQuery({});\r\n\r\n  const bookings = bookingsData || [];\r\n  const availabilitySlots = availabilityData || [];\r\n\r\n  // Calculate dashboard statistics\r\n  const calculateStats = () => {\r\n    const today = new Date();\r\n    const startOfDay = new Date(today.setHours(0, 0, 0, 0));\r\n    const endOfDay = new Date(today.setHours(23, 59, 59, 999));\r\n\r\n    const todayBookings = bookings.filter((booking) => {\r\n      const bookingDate = new Date(booking.appointmentDate);\r\n      return bookingDate >= startOfDay && bookingDate <= endOfDay;\r\n    });\r\n\r\n    const confirmedBookings = bookings.filter(\r\n      (booking) => booking.status === 'confirmed',\r\n    );\r\n\r\n    const pendingBookings = bookings.filter(\r\n      (booking) => booking.status === 'pending',\r\n    );\r\n\r\n    const completedBookings = bookings.filter(\r\n      (booking) => booking.status === 'completed',\r\n    );\r\n\r\n    return {\r\n      totalBookings: bookings.length,\r\n      todayBookings: todayBookings.length,\r\n      confirmedBookings: confirmedBookings.length,\r\n      pendingBookings: pendingBookings.length,\r\n      completedBookings: completedBookings.length,\r\n      availableSlots: availabilitySlots.length,\r\n    };\r\n  };\r\n\r\n  const stats = calculateStats();\r\n\r\n  // Get recent bookings (last 5)\r\n  const recentBookings = bookings\r\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n    .slice(0, 5);\r\n\r\n  // Get upcoming appointments\r\n  const upcomingAppointments = bookings\r\n    .filter((booking) => {\r\n      const appointmentDate = new Date(booking.appointmentDate);\r\n      return appointmentDate > new Date() && booking.status === 'confirmed';\r\n    })\r\n    .sort((a, b) => new Date(a.appointmentDate) - new Date(b.appointmentDate))\r\n    .slice(0, 3);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n    });\r\n  };\r\n\r\n  const formatTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const getStatusBadgeClass = (status) => {\r\n    switch (status) {\r\n      case 'confirmed':\r\n        return 'badge-success';\r\n      case 'pending':\r\n        return 'badge-warning';\r\n      case 'completed':\r\n        return 'badge-info';\r\n      case 'cancelled':\r\n        return 'badge-danger';\r\n      default:\r\n        return 'badge-secondary';\r\n    }\r\n  };\r\n\r\n  // Get profile picture URL - Fixed to use correct API base URL\r\n  const getProfilePictureUrl = () => {\r\n    // Debug log to see what's in user object\r\n    console.log('🖼️ [DASHBOARD] User object:', user);\r\n    console.log('🖼️ [DASHBOARD] PhotoUrl field:', user?.photoUrl);\r\n    console.log('🖼️ [DASHBOARD] API Base URL:', API_BASE_URL);\r\n\r\n    if (user?.photoUrl) {\r\n      // If it's already a full URL (starts with http), use it directly\r\n      if (user.photoUrl.startsWith('http')) {\r\n        console.log('🖼️ [DASHBOARD] Using full URL:', user.photoUrl);\r\n        return user.photoUrl;\r\n      }\r\n\r\n      // If it's a relative path, construct the full URL using API_BASE_URL\r\n      // Remove leading slash if present to avoid double slashes\r\n      const cleanPath = user.photoUrl.startsWith('/')\r\n        ? user.photoUrl.substring(1)\r\n        : user.photoUrl;\r\n      const fullImageUrl = `${API_BASE_URL}${cleanPath}`;\r\n      console.log('🖼️ [DASHBOARD] Constructed image URL:', fullImageUrl);\r\n      return fullImageUrl;\r\n    }\r\n\r\n    // Fallback to placeholder\r\n    console.log('🖼️ [DASHBOARD] No photoUrl found, using placeholder');\r\n    return '/placeholder.png';\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Please log in to view the dashboard.</div>;\r\n  }\r\n\r\n  if (bookingsLoading || availabilityLoading || authLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Welcome Section */}\r\n      <div className=\"welcome-section\">\r\n        <div className=\"welcome-content\">\r\n          <h1>\r\n            Welcome back, Dr.{' '}\r\n            {user?.display_name || user?.firstName || 'Doctor'}!\r\n          </h1>\r\n          <p className=\"welcome-subtitle\">\r\n            Here's what's happening with your practice today\r\n          </p>\r\n        </div>\r\n        <div className=\"welcome-date\">\r\n          <span>\r\n            {new Date().toLocaleDateString('en-US', {\r\n              weekday: 'long',\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n            })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card stat-card-success\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-alt\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.totalBookings}</h3>\r\n            <p>Total Bookings</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stat-card stat-card-primary\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-check\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.todayBookings}</h3>\r\n            <p>Today's Appointments</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stat-card stat-card-warning\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-clock\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.pendingBookings}</h3>\r\n            <p>Pending Approval</p>\r\n          </div>\r\n        </div>\r\n        {/* \r\n        <div className=\"stat-card stat-card-info\">\r\n          <div className=\"stat-icon\">\r\n            <i className=\"fas fa-calendar-plus\"></i>\r\n          </div>\r\n          <div className=\"stat-content\">\r\n            <h3>{stats.availableSlots}</h3>\r\n            <p>Available Slots</p>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"dashboard-grid\">\r\n        {/* Upcoming Appointments */}\r\n        <div className=\"dashboard-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Upcoming Appointments</h3>\r\n            <span className=\"card-count\">{upcomingAppointments.length}</span>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {upcomingAppointments.length > 0 ? (\r\n              <div className=\"appointments-list\">\r\n                {upcomingAppointments.map((appointment) => (\r\n                  <div key={appointment.id} className=\"appointment-item\">\r\n                    <div className=\"appointment-time\">\r\n                      <span className=\"time\">\r\n                        {formatTime(appointment.appointmentDate)}\r\n                      </span>\r\n                      <span className=\"date\">\r\n                        {formatDate(appointment.appointmentDate)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"appointment-details\">\r\n                      <h4>{appointment.patientName || 'Patient'}</h4>\r\n                      <p>{appointment.service || 'General Consultation'}</p>\r\n                    </div>\r\n                    <div className=\"appointment-status\">\r\n                      <span\r\n                        className={`status-badge ${getStatusBadgeClass(appointment.status)}`}\r\n                      >\r\n                        {appointment.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <i className=\"fas fa-calendar-times\"></i>\r\n                <p>No upcoming appointments</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Bookings */}\r\n        <div className=\"dashboard-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Recent Bookings</h3>\r\n            <span className=\"card-count\">{recentBookings.length}</span>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            {recentBookings.length > 0 ? (\r\n              <div className=\"bookings-list\">\r\n                {recentBookings.map((booking) => (\r\n                  <div key={booking.id} className=\"booking-item\">\r\n                    <div className=\"booking-info\">\r\n                      <h4>{booking.patientName || 'Patient'}</h4>\r\n                      <p>\r\n                        {formatDate(booking.appointmentDate)} at{' '}\r\n                        {formatTime(booking.appointmentDate)}\r\n                      </p>\r\n                      <span className=\"booking-service\">\r\n                        {booking.service || 'General Consultation'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"booking-status\">\r\n                      <span\r\n                        className={`status-badge ${getStatusBadgeClass(booking.status)}`}\r\n                      >\r\n                        {booking.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <i className=\"fas fa-inbox\"></i>\r\n                <p>No recent bookings</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Doctor Info Card */}\r\n        <div className=\"dashboard-card doctor-profile-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Profile Overview</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"doctor-info\">\r\n              <div className=\"doctor-avatar\">\r\n                <img\r\n                  src={getProfilePictureUrl()}\r\n                  alt=\"Doctor Avatar\"\r\n                  onError={(e) => {\r\n                    console.log(\r\n                      '🖼️ [DASHBOARD] Image failed to load, using placeholder',\r\n                    );\r\n                    console.log('🖼️ [DASHBOARD] Failed URL was:', e.target.src);\r\n                    e.target.src = '/placeholder.png';\r\n                  }}\r\n                  onLoad={() => {\r\n                    console.log('🖼️ [DASHBOARD] Image loaded successfully');\r\n                  }}\r\n                />\r\n                <div className=\"avatar-status\">\r\n                  <i className=\"fas fa-circle\"></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"doctor-details\">\r\n                <h4>\r\n                  Dr.{' '}\r\n                  {user?.display_name ||\r\n                    `${user?.firstName} ${user?.lastName}` ||\r\n                    'Doctor'}\r\n                </h4>\r\n                <p className=\"doctor-specialty\">\r\n                  {user?.title || user?.specialty || 'General Medicine'}\r\n                </p>\r\n                <div className=\"doctor-contact\">\r\n                  <div className=\"contact-item\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <span>{user?.email}</span>\r\n                  </div>\r\n                  <div className=\"contact-item\">\r\n                    <i className=\"fas fa-phone\"></i>\r\n                    <span>{user?.phone || 'Phone not provided'}</span>\r\n                  </div>\r\n                  {user?.address && (\r\n                    <div className=\"contact-item\">\r\n                      <i className=\"fas fa-map-marker-alt\"></i>\r\n                      <span>{user.address}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"doctor-services\">\r\n                  <strong>Services:</strong>\r\n                  <div className=\"services-list\">\r\n                    {user?.services && user.services.length > 0 ? (\r\n                      user.services.slice(0, 3).map((service, index) => (\r\n                        <span key={index} className=\"service-tag\">\r\n                          {service.name || service}\r\n                        </span>\r\n                      ))\r\n                    ) : (\r\n                      <span className=\"no-services\">No services listed</span>\r\n                    )}\r\n                    {user?.services && user.services.length > 3 && (\r\n                      <span className=\"service-tag more-services\">\r\n                        +{user.services.length - 3} more\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Loading","props","children","_jsxs","className","_jsx","ScaleLoader","height","color","Dashboard","dispatch","useDispatch","user","isAuthenticated","loading","authLoading","useSelector","state","auth","useEffect","fetchUserProfile","data","bookingsData","isLoading","bookingsLoading","useGetBookingsQuery","status","limit","availabilityData","availabilityLoading","useGetAvailabilitySlotsQuery","bookings","availabilitySlots","stats","calculateStats","today","Date","startOfDay","setHours","endOfDay","todayBookings","filter","booking","bookingDate","appointmentDate","confirmedBookings","pendingBookings","completedBookings","totalBookings","length","availableSlots","recentBookings","sort","a","b","createdAt","slice","upcomingAppointments","formatDate","dateString","toLocaleDateString","year","month","day","formatTime","toLocaleTimeString","hour","minute","getStatusBadgeClass","display_name","firstName","weekday","map","appointment","patientName","service","concat","id","src","getProfilePictureUrl","console","log","photoUrl","API_BASE_URL","startsWith","cleanPath","substring","fullImageUrl","alt","onError","e","target","onLoad","lastName","title","specialty","email","phone","address","services","index","name"],"sourceRoot":""}