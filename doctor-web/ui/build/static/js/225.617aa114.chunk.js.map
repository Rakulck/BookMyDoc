{"version":3,"file":"static/js/225.617aa114.chunk.js","mappings":"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","sources":["components/services/Service.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useConsultations } from '../../contexts/ConsultationContext';\nimport './Service.css';\n\nconst Service = () => {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [newConsultation, setNewConsultation] = useState({\n    name: '',\n    duration: '',\n    price: '',\n    description: '',\n  });\n\n  const { consultations, addConsultation } = useConsultations();\n\n  // Only show custom consultations\n  const consultationTypes = consultations;\n\n  const handleCreateConsultation = () => {\n    setShowCreateForm(true);\n  };\n\n  const handleSaveConsultation = () => {\n    if (\n      newConsultation.name &&\n      newConsultation.duration &&\n      newConsultation.price\n    ) {\n      // Create new consultation with unique ID\n      const newConsultationItem = {\n        id: Date.now(), // Simple ID generation\n        name: newConsultation.name,\n        duration: newConsultation.duration,\n        price: parseInt(newConsultation.price),\n        description: newConsultation.description || 'Custom consultation type',\n        features: ['Custom consultation', 'Professional medical advice'],\n        isCustom: true,\n      };\n\n      // Add to consultations context\n      addConsultation(newConsultationItem);\n\n      // Reset form\n      setNewConsultation({\n        name: '',\n        duration: '',\n        price: '',\n        description: '',\n      });\n      setShowCreateForm(false);\n\n      console.log('Created new consultation:', newConsultationItem);\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewConsultation((prev) => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"services-container\">\n      <div className=\"services-header\">\n        <h1>Manage Consultation Types</h1>\n        <p>Create and manage your consultation offerings for patients</p>\n        <button\n          className=\"create-consultation-btn\"\n          onClick={handleCreateConsultation}\n        >\n          + Create New Consultation Type\n        </button>\n      </div>\n\n      <div className=\"services-grid\">\n        {(consultationTypes || []).map((service) => (\n          <div\n            key={service.id}\n            className={`service-card ${service.popular ? 'popular' : ''}`}\n          >\n            {service.popular && (\n              <div className=\"popular-badge\">Most Popular</div>\n            )}\n\n            <div className=\"service-header\">\n              <h3>{service.name}</h3>\n              <div className=\"service-duration\">\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n                    fill=\"currentColor\"\n                  />\n                  <path\n                    d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67V7z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n                <span>{service.duration}</span>\n              </div>\n            </div>\n\n            <div className=\"service-price\">\n              <span className=\"currency\">₹</span>\n              <span className=\"amount\">{service.price}</span>\n            </div>\n\n            <div className=\"service-description\">\n              <p>{service.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Create New Consultation Modal */}\n      {showCreateForm && (\n        <div className=\"booking-modal-overlay\">\n          <div className=\"booking-modal\">\n            <div className=\"modal-header\">\n              <h3>Create New Consultation Type</h3>\n              <button\n                className=\"close-modal\"\n                onClick={() => setShowCreateForm(false)}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-content\">\n              <div className=\"create-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"consultation-name\">Consultation Name</label>\n                  <input\n                    id=\"consultation-name\"\n                    type=\"text\"\n                    placeholder=\"e.g., Quick Consultation\"\n                    value={newConsultation.name}\n                    onChange={(e) => handleInputChange('name', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"consultation-duration\">Duration</label>\n                  <input\n                    id=\"consultation-duration\"\n                    type=\"text\"\n                    placeholder=\"e.g., 30 minutes\"\n                    value={newConsultation.duration}\n                    onChange={(e) =>\n                      handleInputChange('duration', e.target.value)\n                    }\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"consultation-price\">Price (₹)</label>\n                  <input\n                    id=\"consultation-price\"\n                    type=\"number\"\n                    placeholder=\"e.g., 500\"\n                    value={newConsultation.price}\n                    onChange={(e) => handleInputChange('price', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"consultation-description\">\n                    Description (Optional)\n                  </label>\n                  <textarea\n                    id=\"consultation-description\"\n                    placeholder=\"Brief description of this consultation type\"\n                    value={newConsultation.description}\n                    onChange={(e) =>\n                      handleInputChange('description', e.target.value)\n                    }\n                    rows=\"3\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"modal-actions\">\n                <button\n                  className=\"cancel-btn\"\n                  onClick={() => setShowCreateForm(false)}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"confirm-book-btn\"\n                  onClick={handleSaveConsultation}\n                  disabled={\n                    !newConsultation.name ||\n                    !newConsultation.duration ||\n                    !newConsultation.price\n                  }\n                >\n                  Create Consultation\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Service;\n"],"names":["Service","showCreateForm","setShowCreateForm","useState","newConsultation","setNewConsultation","name","duration","price","description","consultations","addConsultation","useConsultations","consultationTypes","handleInputChange","field","value","prev","_jsxs","className","children","_jsx","onClick","handleCreateConsultation","map","service","concat","popular","width","height","viewBox","fill","xmlns","d","id","htmlFor","type","placeholder","onChange","e","target","rows","handleSaveConsultation","newConsultationItem","Date","now","parseInt","features","isCustom","console","log","disabled"],"sourceRoot":""}