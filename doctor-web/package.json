{
  "name": "web",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "node dist/main.js",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "app:build": "npm run build && npm run build:ui",
    "app:start": "concurrently \"npm run start\" \"npm run start:ui\"",
    "app:dev": "concurrently \"npm run start:dev\" \"npm run start:ui:dev\"",
    "app:dev-w": "concurrently \"npm run start:dev\" \"npm run start:ui:dev-w\"",
    "start:ui:dev": "npm run start:dev --prefix ui",
    "start:ui:dev-w": "npm run start:dev-w --prefix ui",
    "start:ui": "npm run start --prefix ui",
    "build:ui": "npm run build --prefix ui",
    "build:production": "npm run build:ui && npm run build",
    "copy:api": "node -e \"const fs=require('fs');const path=require('path');if(!fs.existsSync('api'))fs.mkdirSync('api',{recursive:true});if(fs.existsSync('dist'))fs.cpSync('dist',path.join('api','dist'),{recursive:true});\"",
    "deploy:vercel": "npm run build:production && vercel --prod",
    "verify:build": "node -e \"const fs = require('fs'); console.log('UI build exists:', fs.existsSync('ui/build')); console.log('Backend dist exists:', fs.existsSync('dist'));\"",
    "test:ui": "npm run test --prefix ui",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "lint:prettier": "prettier '{src,test,e2e,ui/src}/**/*.{js,ts,tsx}' --config .prettierrc --check",
    "lint:prettier-fix": "npm run lint:prettier -- --write",
    "lint:eslint": "eslint \"{src,test,e2e,ui/src}/**/*.{js,ts,tsx}\" -c .eslintrc.js",
    "lint:eslint-fix": "npm run lint:eslint -- --fix",
    "lint:fix": "concurrently \"npm run lint:prettier-fix\" \"npm run lint:eslint-fix\"",
    "lint:type": "tsc --noEmit",
    "lint": "concurrently \"npm run lint:prettier\" \"npm run lint:eslint\" \"npm run lint:type\"",
    "commitlint": "commitlint --edit",
    "lint:staged": "lint-staged"
  },
  "dependencies": {
    "@nestjs/common": "^10.3.9",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.3.9",
    "@nestjs/platform-express": "^10.3.9",
    "@nestjs/serve-static": "^4.0.2",
    "@nestjs/swagger": "^7.3.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "firebase-admin": "^12.2.0",
    "razorpay": "^2.9.5",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "stripe": "^17.2.1",
    "uuid": "^10.0.0",
    "zod": "^3.23.8",
    "@nestjs/cli": "^10.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.7",
    "husky": "^9.0.11",
    "jest": "^29.5.0",
    "lint-staged": "^15.2.7",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapping": {
      "^@app/(.*)$": "<rootDir>/$1",
      "^@common/(.*)$": "<rootDir>/common/$1",
      "^@mock/(.*)$": "<rootDir>/../test/mock/$1"
    },
    "setupFilesAfterEnv": ["<rootDir>/../test/jest.setup.ts"]
  }
}
